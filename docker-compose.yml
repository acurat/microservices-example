version: "3"

services:

  # MySQL from openzipkin to bootstrap database for Zipkin
#  storage:
#    image: openzipkin/zipkin-mysql
#    container_name: mysql
#    ports:
#      - 3306:3306
  storage:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      MYSQL_DATABASE: 'zipkin'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql

  # Zipkin to collect tracing information (UI and Http run here)
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    environment:
      - STORAGE_TYPE=mysql
      - MYSQL_HOST=mysql
      - MYSQL_USER=user
      - MYSQL_PASS=password
    ports:
      - 9411:9411
    depends_on:
      - storage

  # Prometheus for scraping metrics
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    depends_on:
      - zipkin
    volumes:
      - ./infra/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  # Metrics Dashboard with Grafana
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin

  # Create default zipkin dashboard
  setup_grafana_datasource:
    image: appropriate/curl
    container_name: setup_grafana_datasource
    depends_on:
      - grafana
    volumes:
      - ./infra/create-datasource-and-dashboard.sh:/create.sh:ro
    command: /create.sh

volumes:
  prometheus_data:
  mysql_data: